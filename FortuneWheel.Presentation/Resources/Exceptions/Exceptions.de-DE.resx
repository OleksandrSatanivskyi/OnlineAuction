<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account already has a verified email." xml:space="preserve">
    <value>Das Konto verfügt bereits über eine bestätigte E-Mail.</value>
  </data>
  <data name="Account with email was not found." xml:space="preserve">
    <value>Konto mit E-Mail wurde nicht gefunden.</value>
  </data>
  <data name="Auction type is not correct." xml:space="preserve">
    <value>Auktionstyp ist nicht korrekt.</value>
  </data>
  <data name="Auction was not found." xml:space="preserve">
    <value>Auktion wurde nicht gefunden.</value>
  </data>
  <data name="Email is already associated with another account." xml:space="preserve">
    <value>Die E-Mail ist bereits einem anderen Konto zugeordnet.</value>
  </data>
  <data name="Incorrect password." xml:space="preserve">
    <value>Falsches Passwort.</value>
  </data>
  <data name="Invalid code format. The code should consist of 5 digits." xml:space="preserve">
    <value>Ungültiges Codeformat. Der Code sollte aus 5 Ziffern bestehen.</value>
  </data>
  <data name="Invalid email format." xml:space="preserve">
    <value>Ungültiges Email-Format.</value>
  </data>
  <data name="Invalid input." xml:space="preserve">
    <value>Ungültige Eingabe.</value>
  </data>
  <data name="Invalid password." xml:space="preserve">
    <value>Ungültiges Passwort.</value>
  </data>
  <data name="Name is required." xml:space="preserve">
    <value>Name ist erforderlich.</value>
  </data>
  <data name="Password length must be between 8 and 64 characters." xml:space="preserve">
    <value>Die Kennwortlänge muss zwischen 8 und 64 Zeichen liegen.</value>
  </data>
  <data name="Password should contain at least one lowercase letter, one uppercase letter, and one digit." xml:space="preserve">
    <value>Das Passwort muss mindestens einen Kleinbuchstaben, einen Großbuchstaben und eine Ziffer enthalten.</value>
  </data>
  <data name="Passwords do not match." xml:space="preserve">
    <value>Passwörter stimmen nicht überein.</value>
  </data>
  <data name="Segment was not found." xml:space="preserve">
    <value>Segment wurde nicht gefunden.</value>
  </data>
  <data name="Surname is required." xml:space="preserve">
    <value>Nachname ist erforderlich.</value>
  </data>
  <data name="The password and confirm password do not match." xml:space="preserve">
    <value>Das Kennwort und die Kennwortbestätigung stimmen nicht überein.</value>
  </data>
  <data name="There are no account registered with this email." xml:space="preserve">
    <value>Mit dieser E-Mail ist kein Konto registriert.</value>
  </data>
  <data name="Title is required." xml:space="preserve">
    <value>Titel ist erforderlich.</value>
  </data>
  <data name="Title must be at least 2 characters long." xml:space="preserve">
    <value>Der Titel muss mindestens 2 Zeichen lang sein.</value>
  </data>
  <data name="Title must not be empty and must be at least 2 characters long." xml:space="preserve">
    <value>Der Titel darf nicht leer sein und muss mindestens 2 Zeichen lang sein.</value>
  </data>
  <data name="Title must not exceed 40 characters." xml:space="preserve">
    <value>Der Titel darf nicht länger als 40 Zeichen sein.</value>
  </data>
  <data name="Unsupported type of auction." xml:space="preserve">
    <value>Nicht unterstützter Auktionstyp.</value>
  </data>
  <data name="Wheel type is required." xml:space="preserve">
    <value>Radtyp ist erforderlich.</value>
  </data>
</root>